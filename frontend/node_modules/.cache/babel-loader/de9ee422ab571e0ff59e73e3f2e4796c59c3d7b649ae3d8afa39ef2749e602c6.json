{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rushikesh Patil\\\\OneDrive\\\\Desktop\\\\Task_Manager-Django_React-main\\\\Task_Manager-Django_React-main\\\\frontend\\\\src\\\\components\\\\Modal.js\";\nimport React, { Component } from \"react\";\n// importing all of these classes from reactstrap module\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\n\n// build a class base component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    // changes handler to check if a checkbox is checed or not\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n      const activeItem = {\n        ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n  // rendering modal in the custommodal class received toggle and on save as props,\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \" Task Item \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"title\",\n              value: this.state.activeItem.title,\n              onChange: this.handleChange,\n              placeholder: \"Enter Task Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              value: this.state.activeItem.description,\n              onChange: this.handleChange,\n              placeholder: \"Enter Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              for: \"completed\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: this.state.activeItem.completed,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), \"Completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => onSave(this.state.activeItem),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CustomModal;","map":{"version":3,"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","jsxDEV","_jsxDEV","CustomModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","isOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","for","title","onChange","placeholder","description","check","completed","color","onClick"],"sources":["C:/Users/Rushikesh Patil/OneDrive/Desktop/Task_Manager-Django_React-main/Task_Manager-Django_React-main/frontend/src/components/Modal.js"],"sourcesContent":["import React, { Component } from \"react\";\n// importing all of these classes from reactstrap module\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\n// build a class base component\nclass CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n  // changes handler to check if a checkbox is checed or not\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n\n  // rendering modal in the custommodal class received toggle and on save as props,\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Task Item </ModalHeader>\n        <ModalBody>\n        \n          <Form>\n\n            {/* 3 formgroups\n            1 title label */}\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Task Title\"\n              />\n            </FormGroup>\n\n            {/* 2 description label */}\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Task Description\"\n              />\n            </FormGroup>\n\n            {/* 3 completed label */}\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        {/* create a modal footer */}\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\nexport default CustomModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}